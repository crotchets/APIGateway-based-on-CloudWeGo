// Code generated by hertz generator.

package apigatewayservice

import (
	"APIGateway/biz/idl_manager"
	apigatewayservice "APIGateway/biz/model/apigatewayservice"
	"APIGateway/biz/rpc_router"
	"context"
	"fmt"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/common/adaptor"
	"github.com/cloudwego/hertz/pkg/common/json"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	"github.com/cloudwego/kitex/pkg/generic"
	"io"
)

// APIPost .
// @router agw/:serviceName/*methodName [POST]
func APIPost(ctx context.Context, c *app.RequestContext) {
	var err error
	var req apigatewayservice.Req
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}
	var resp string
	httpReq, _ := adaptor.GetCompatRequest(c.GetRequest())
	re, err := generic.FromHTTPRequest(httpReq)
	if err != nil {
		fmt.Println(err)
	}
	m := re.Body
	s, _ := json.Marshal(m)
	str := string(s)
	res, err := rpc_router.NewMyRouter().Forward(ctx, str, req.ServiceName, req.MethodName)

	if err != nil {
		fmt.Println(err)
		return
	}
	resp = res.(string)

	c.JSON(consts.StatusOK, resp)
}

// IDLManage .
// @router idl/:IDLName/:IDLVersion [PATCH]
func IDLManage(ctx context.Context, c *app.RequestContext) {
	var err error
	var req apigatewayservice.IDLManageReq
	var resp = new(apigatewayservice.Resp)
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}
	httpReq, _ := adaptor.GetCompatRequest(c.GetRequest())
	body, _ := io.ReadAll(httpReq.Body)
	switch req.Method {
	case "add":
		err = idl_manager.AddIDL(req.IDLName, string(body))
	case "delete":
		err = idl_manager.DelIDL(req.IDLName)
	}
	if err != nil {
		resp.Msg = err.Error()
		c.JSON(consts.StatusBadRequest, resp)
		return
	}
	resp.Msg = "success"
	c.JSON(consts.StatusOK, resp)
}
